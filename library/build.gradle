apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'com.novoda.bintray-release'

def versionMajor = 4
def versionMinor = 99
def versionPatch = 1

def libraryGroupId = 'com.devbrackets.android'
def libraryBaseName = 'exomedia'
def libraryVersion = "${versionMajor}.${versionMinor}.${versionPatch}"

repositories {
    maven {
        url("https://ampme.bintray.com/maven")
        credentials {
            username System.properties['bintray.user']
            password System.properties['bintray.key']
        }
    }
}

dependencies {
    // Android
    compile 'com.android.support:appcompat-v7:25.3.1'

    // ExoPlayer
    compile('com.google.android.exoplayer:library-core:r2.99.0')
    compile('com.google.android.exoplayer:exoplayer-dash:r2.4.0') {
        exclude group: 'com.google.android.exoplayer', module: 'exoplayer-core'
    }
    compile('com.google.android.exoplayer:exoplayer-hls:r2.4.0') {
        exclude group: 'com.google.android.exoplayer', module: 'exoplayer-core'
    }
    compile('com.google.android.exoplayer:exoplayer-smoothstreaming:r2.4.0') {
        exclude group: 'com.google.android.exoplayer', module: 'exoplayer-core'
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

// ======== MAVEN DEPLOY to local cache or nexus repo (to make accessible to local projects) (command: ./gradlew clean aRel uploadArchives) ========
uploadArchives {
    repositories {
        // deploy to local
        mavenDeployer {
            repository(url: "file://${System.env.HOME}/.m2/repository/")
            pom.groupId = libraryGroupId
            pom.artifactId = libraryBaseName
            pom.version = libraryVersion
            //Normally I would append "-SNAPSHOT" but newer gradle/maven can't always find them
            pom.packaging = 'aar'
            uniqueVersion = false
            // don't put in a timestamp on the filename (other project will not be able to depend on it)
        }
    }
}

// ======= BINTRAY DEPLOY (command: $ ./gradlew clean build bintrayUpload -PbintrayUser=BINTRAY_USERNAME -PbintrayKey=BINTRAY_KEY -PdryRun=false) ====
publish {
    userOrg = 'ampme'
    groupId = libraryGroupId
    artifactId = libraryBaseName
    uploadName = 'ExoMedia'
    version = libraryVersion
    autoPublish = false
    dryRun = false
    bintrayUser = System.properties['bintray.user']
    bintrayKey = System.properties['bintray.key']
}
